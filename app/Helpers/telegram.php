<?php

use App\Models\SecretGuest;
use App\Models\Spot;
use App\Models\User;
use Illuminate\Support\Carbon;
use Illuminate\Support\Facades\DB;

function sendSecretGuestPoll($guestId, $poll) {
    $link             = encrypt_decrypt('encrypt', "{$poll->id}, {$poll->secret_guest_id}");
    $secretTelegramId = getSecretGuestTelegramId($guestId);

    if (!empty($secretTelegramId)) {
        $time     = Carbon::parse($poll->until_at)->format('d.m.Y');
        $spotName = Spot::query()->where('id', $poll->spot_id)->value('title');
        $text     = "–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ <b>SurfCoffee x $spotName</b>, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –¥–æ <b>$time</b>.";

        return sendTelegramRequest([
            'chat_id'      => $secretTelegramId,
            'text'         => $text,
            'parse_mode'   => "HTML",
            'reply_markup' => [
                'inline_keyboard' => [
                    [['text' => 'üïµÔ∏è –ù–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É', 'url' => "https://quality.surfcoffee.ru/poll/$link"]],
                ],
                'remove_keyboard' => true,
            ]
        ]);
    } else {
        return [];
    }
}

function sendSecretGuestChangeStatus(SecretGuest $guest, string $status) {
    $secretTelegramId = getSecretGuestTelegramId($guest->id);

    if (!empty($secretTelegramId)) {
        if ($status == '–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏') {
            $text = "‚è≥ $guest->name, —Ç–≤–æ—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –≥–æ—Å—Ç—è <b>–Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏</b>! ";
        } else if ($status == '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω') {
            $text = "ü•≥ $guest->name, —Ç–≤–æ—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –≥–æ—Å—Ç—è <b>–æ–¥–æ–±—Ä–µ–Ω–∞</b>! ";
        } else if ($status == '–û—Ç–∫–∞–∑–∞–Ω–æ') {
            $text = "üòû $guest->name, —Ç–≤–æ—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –≥–æ—Å—Ç—è <b>–æ—Ç–∫–∞–∑–∞–Ω–∞</b>! –¢—ã —Å–º–æ–∂–µ—à—å –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –≥–æ—Å—Ç—è —Å–Ω–æ–≤–∞ —á—É—Ç—å –ø–æ–∑–∂–µ!";
        }

        return sendTelegramText($secretTelegramId, $text, true);
    }

    return "";
}

function sendCreatePollNotify($poll) {
    $adminsTelegramId = getAdminsIds();

    foreach ($adminsTelegramId as $id) {
        $secretGuestName = SecretGuest::query()->where('id', $poll->secret_guest_id)->value('name');
        $spotName        = Spot::query()->where('id', $poll->spot_id)->value('title');
        $time            = Carbon::parse($poll->until_at)->format('d.m.Y');
        $text            = "üïµÔ∏è –ù–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –≥–æ—Å—Ç—è <b>$secretGuestName</b>. –°–ø–æ—Ç - <b>SurfCoffee x $spotName</b>. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ—Å—Ç–æ—è—Ç—å—Å—è –¥–æ <b>$time</b>.";

        sendTelegramRequest([
            'chat_id'      => $id,
            'text'         => $text,
            'parse_mode'   => "HTML",
            'reply_markup' => [
                'inline_keyboard' => [
                    [['text' => '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø—Ä–æ—Å–µ', 'url' => "https://quality.surfcoffee.ru/polls/{$poll->id}"]],
                ],
                'remove_keyboard' => true,
            ]
        ]);
    }

    return "";
}

function sendNewSecretNotify($guest, $type = 'api') {
    $adminsTelegramId = getAdminsIds();

    foreach ($adminsTelegramId as $id) {
        $text = "üïµÔ∏è –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ —Ç–∞–π–Ω—ã–µ –≥–æ—Å—Ç–∏ –æ—Ç <b>$guest->name</b> (@$guest->telegram_nickname) –∏–∑ –≥–æ—Ä–æ–¥–∞ $guest->city.";
        $text .= $type == 'api' ? " –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ API." : " –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤—Ä—É—á–Ω—É—é.";

        sendTelegramRequest([
            'chat_id' => $id,
            'text' => $text,
            'parse_mode' => "HTML",
            'reply_markup' => [
                'inline_keyboard' => [
                    [['text' => '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—è–≤–∫–µ', 'url' => "https://quality.surfcoffee.ru/guests/{$guest->id}"]],
                ],
                'remove_keyboard' => true,
            ]
        ]);
    }

    return "";
}

function getAdminsIds() : array {
    $users = User::query()->where([['group_id', "!=", "3"], ['telegram_nickname', '!=', '']])->pluck('telegram_nickname')->toArray();
    return DB::connection('supportBot')
        ->table('bot_spy_clients')
        ->whereIn('username', $users)
        ->pluck('telegram_id')->toArray();
    ;
}

function getSecretGuestTelegramId($guestId) {
    $telegramNickname = SecretGuest::query()->where('id', $guestId)->value('telegram_nickname');
    return DB::connection('supportBot')
        ->table('bot_spy_clients')
        ->where('username', $telegramNickname)
        ->orWhere('telegram_id', $telegramNickname)
        ->value('telegram_id')
    ;
}

function sendTelegramText($id, string $text, bool $removeKeyboard = false) : array {
    if ($removeKeyboard) {
        $message = [
            'chat_id'      => $id,
            'text'         => $text,
            'parse_mode'   => "HTML",
            'reply_markup' => [
                'remove_keyboard' => $removeKeyboard
            ]
        ];
    } else {
        $message = [
            'chat_id'    => $id,
            'parse_mode' => "HTML",
            'text'       => $text
        ];
    }

    return sendTelegramRequest($message);
}

function sendTelegramRequest($data, $method = 'sendMessage') {
    $curl    = curl_init( 'https://api.telegram.org/bot6566897746:AAFnRqBZpWG-RprkWDybmAyx9scUj5K_QmQ/' . $method);
    $payload = json_encode($data);

    curl_setopt($curl, CURLOPT_POSTFIELDS, $payload);
    curl_setopt($curl, CURLOPT_HTTPHEADER, ['Content-Type:application/json']);
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);

    $result = json_decode(curl_exec($curl), true);

    curl_close($curl);

    return $result;
}
